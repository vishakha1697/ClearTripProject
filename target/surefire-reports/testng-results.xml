<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="8" passed="6">
  <reporter-output>
    <line>
      <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_01_IST_2020.jpg>Screenshot</a>]]>
    </line>
    <line>
      <![CDATA[<a href =Fri_Sep_18_21_55_01_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_01_IST_2020.jpg></img></a>]]>
    </line>
    <line>
      <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_04_IST_2020.jpg>Screenshot</a>]]>
    </line>
    <line>
      <![CDATA[<a href =Fri_Sep_18_21_55_04_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_04_IST_2020.jpg></img></a>]]>
    </line>
    <line>
      <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_07_IST_2020.jpg>Screenshot</a>]]>
    </line>
    <line>
      <![CDATA[<a href =Fri_Sep_18_21_55_07_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_07_IST_2020.jpg></img></a>]]>
    </line>
    <line>
      <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_20_IST_2020.jpg>Screenshot</a>]]>
    </line>
    <line>
      <![CDATA[<a href =Fri_Sep_18_21_55_20_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_20_IST_2020.jpg></img></a>]]>
    </line>
    <line>
      <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_28_IST_2020.jpg>Screenshot</a>]]>
    </line>
    <line>
      <![CDATA[<a href =Fri_Sep_18_21_55_28_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_28_IST_2020.jpg></img></a>]]>
    </line>
    <line>
      <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_31_IST_2020.jpg>Screenshot</a>]]>
    </line>
    <line>
      <![CDATA[<a href =Fri_Sep_18_21_55_31_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_31_IST_2020.jpg></img></a>]]>
    </line>
    <line>
      <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_33_IST_2020.jpg>Screenshot</a>]]>
    </line>
    <line>
      <![CDATA[<a href =Fri_Sep_18_21_55_33_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_33_IST_2020.jpg></img></a>]]>
    </line>
    <line>
      <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_36_IST_2020.jpg>Screenshot</a>]]>
    </line>
    <line>
      <![CDATA[<a href =Fri_Sep_18_21_55_36_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_36_IST_2020.jpg></img></a>]]>
    </line>
  </reporter-output>
  <suite name="Clear Trip Project Suite" duration-ms="41057" started-at="2020-09-18T16:24:55Z" finished-at="2020-09-18T16:25:36Z">
    <groups>
    </groups>
    <test name="Search page(valid) Test" duration-ms="25127" started-at="2020-09-18T16:24:55Z" finished-at="2020-09-18T16:25:20Z">
      <class name="com.practice.PositiveTestcases.ValidScenarioTest">
        <test-method status="PASS" signature="selectFromAndTOCityTest(java.lang.String, java.lang.String)[pri:1, instance:com.practice.PositiveTestcases.ValidScenarioTest@2892d68]" name="selectFromAndTOCityTest" duration-ms="5551" started-at="2020-09-18T16:24:55Z" data-provider="dp" finished-at="2020-09-18T16:25:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mumbai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[New Delhi]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_01_IST_2020.jpg>Screenshot</a>]]>
            </line>
            <line>
              <![CDATA[<a href =Fri_Sep_18_21_55_01_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_01_IST_2020.jpg></img></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- selectFromAndTOCityTest -->
        <test-method status="PASS" signature="seletOneWayTest()[pri:2, instance:com.practice.PositiveTestcases.ValidScenarioTest@2892d68]" name="seletOneWayTest" duration-ms="2133" started-at="2020-09-18T16:25:01Z" finished-at="2020-09-18T16:25:03Z">
          <reporter-output>
            <line>
              <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_04_IST_2020.jpg>Screenshot</a>]]>
            </line>
            <line>
              <![CDATA[<a href =Fri_Sep_18_21_55_04_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_04_IST_2020.jpg></img></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- seletOneWayTest -->
        <test-method status="PASS" signature="selectDateTest()[pri:3, instance:com.practice.PositiveTestcases.ValidScenarioTest@2892d68]" name="selectDateTest" duration-ms="2559" started-at="2020-09-18T16:25:04Z" finished-at="2020-09-18T16:25:06Z">
          <reporter-output>
            <line>
              <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_07_IST_2020.jpg>Screenshot</a>]]>
            </line>
            <line>
              <![CDATA[<a href =Fri_Sep_18_21_55_07_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_07_IST_2020.jpg></img></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- selectDateTest -->
        <test-method status="PASS" signature="clickSearchTest()[pri:4, instance:com.practice.PositiveTestcases.ValidScenarioTest@2892d68]" name="clickSearchTest" duration-ms="13347" started-at="2020-09-18T16:25:07Z" finished-at="2020-09-18T16:25:20Z">
          <reporter-output>
            <line>
              <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_20_IST_2020.jpg>Screenshot</a>]]>
            </line>
            <line>
              <![CDATA[<a href =Fri_Sep_18_21_55_20_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_20_IST_2020.jpg></img></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- clickSearchTest -->
      </class> <!-- com.practice.PositiveTestcases.ValidScenarioTest -->
    </test> <!-- Search page(valid) Test -->
    <test name="Search page(Invaid) Test" duration-ms="15915" started-at="2020-09-18T16:25:20Z" finished-at="2020-09-18T16:25:36Z">
      <class name="com.practice.NegativeTestcases.InvalidScenarioTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.practice.NegativeTestcases.InvalidScenarioTest@173ed316]" name="setup" is-config="true" duration-ms="12839" started-at="2020-09-18T16:24:42Z" finished-at="2020-09-18T16:24:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="back()[pri:0, instance:com.practice.NegativeTestcases.InvalidScenarioTest@173ed316]" name="back" is-config="true" duration-ms="7114" started-at="2020-09-18T16:25:20Z" finished-at="2020-09-18T16:25:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- back -->
        <test-method status="FAIL" signature="invalidSearchFromCityTest(java.lang.String, java.lang.String)[pri:0, instance:com.practice.NegativeTestcases.InvalidScenarioTest@173ed316]" name="invalidSearchFromCityTest" duration-ms="23" started-at="2020-09-18T16:25:27Z" data-provider="dp" finished-at="2020-09-18T16:25:27Z">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[
Data provider mismatch
Method: invalidSearchFromCityTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) 12556.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: 
Data provider mismatch
Method: invalidSearchFromCityTest([Parameter{index=0, type=java.lang.String, declaredAnnotations=[]}, Parameter{index=1, type=java.lang.String, declaredAnnotations=[]}])
Arguments: [(java.lang.String) 12556.0]
at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)
at org.testng.internal.Parameters.injectParameters(Parameters.java:796)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:983)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSearchFromCityTest -->
        <test-method status="FAIL" signature="invalidSearchTest(java.lang.String, java.lang.String)[pri:0, instance:com.practice.NegativeTestcases.InvalidScenarioTest@173ed316]" name="invalidSearchTest" duration-ms="3246" started-at="2020-09-18T16:25:28Z" data-provider="dp" finished-at="2020-09-18T16:25:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mumbai]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.InvalidElementStateException">
            <message>
              <![CDATA[invalid element state
  (Session info: chrome=85.0.4183.83)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'vishakha-Inspiron-3542', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-117-generic', java.version: '1.8.0_265'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /tmp/.com.google.Chrome.w8BUDN}, goog:chromeOptions: {debuggerAddress: localhost:44311}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: e330f2b7090057f4d3c9909776441cde]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidElementStateException: invalid element state
  (Session info: chrome=85.0.4183.83)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'vishakha-Inspiron-3542', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-117-generic', java.version: '1.8.0_265'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /tmp/.com.google.Chrome.w8BUDN}, goog:chromeOptions: {debuggerAddress: localhost:44311}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: e330f2b7090057f4d3c9909776441cde
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:124)
at com.practice.bases.BaseClass.clear(BaseClass.java:209)
at com.practice.NegativeTestcases.InvalidScenarioTest.invalidSearchTest(InvalidScenarioTest.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidElementStateException -->
          <reporter-output>
            <line>
              <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_31_IST_2020.jpg>Screenshot</a>]]>
            </line>
            <line>
              <![CDATA[<a href =Fri_Sep_18_21_55_31_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_31_IST_2020.jpg></img></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidSearchTest -->
        <test-method status="PASS" signature="invalidSearchseletOneWayTest()[pri:0, instance:com.practice.NegativeTestcases.InvalidScenarioTest@173ed316]" name="invalidSearchseletOneWayTest" duration-ms="2133" started-at="2020-09-18T16:25:31Z" finished-at="2020-09-18T16:25:33Z">
          <reporter-output>
            <line>
              <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_33_IST_2020.jpg>Screenshot</a>]]>
            </line>
            <line>
              <![CDATA[<a href =Fri_Sep_18_21_55_33_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_33_IST_2020.jpg></img></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidSearchseletOneWayTest -->
        <test-method status="PASS" signature="invalidSearchselectDateTest()[pri:1, instance:com.practice.NegativeTestcases.InvalidScenarioTest@173ed316]" name="invalidSearchselectDateTest" duration-ms="2391" started-at="2020-09-18T16:25:34Z" finished-at="2020-09-18T16:25:36Z">
          <reporter-output>
            <line>
              <![CDATA[<a target="_blank" href =Fri_Sep_18_21_55_36_IST_2020.jpg>Screenshot</a>]]>
            </line>
            <line>
              <![CDATA[<a href =Fri_Sep_18_21_55_36_IST_2020.jpg><img height=100 width=100 src=Fri_Sep_18_21_55_36_IST_2020.jpg></img></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidSearchselectDateTest -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.practice.NegativeTestcases.InvalidScenarioTest@173ed316]" name="teardown" is-config="true" duration-ms="190" started-at="2020-09-18T16:25:36Z" finished-at="2020-09-18T16:25:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.practice.NegativeTestcases.InvalidScenarioTest -->
    </test> <!-- Search page(Invaid) Test -->
  </suite> <!-- Clear Trip Project Suite -->
</testng-results>
